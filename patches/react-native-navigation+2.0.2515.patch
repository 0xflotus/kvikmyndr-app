patch-package
--- a/node_modules/react-native-navigation/lib/android/app/build.gradle
+++ b/node_modules/react-native-navigation/lib/android/app/build.gradle
@@ -57,6 +57,9 @@ android {
         reactNative56 {
             dimension "RNN.reactNativeVersion"
         }
+        reactNative57 {
+            dimension "RNN.reactNativeVersion"
+        }
     }
 }
 
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/parse/Transition.java
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/parse/Transition.java
@@ -24,11 +24,11 @@ public class Transition {
         transition.toId = TextParser.parse(json, "toId");
         Fraction startDelay = FractionParser.parse(json, "startDelay");
         if (startDelay.hasValue()) {
-            transition.startDelay = new Number((int) (startDelay.get() * 1000));
+            transition.startDelay = new Number((int) (startDelay.get() * 1));
         }
         Fraction duration = FractionParser.parse(json, "duration");
         if (duration.hasValue()) {
-            transition.duration = new Number((int) (duration.get() * 1000));
+            transition.duration = new Number((int) (duration.get() * 1));
         }
 
         return transition;
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/views/topbar/TopBar.java
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/views/topbar/TopBar.java
@@ -3,6 +3,7 @@ package com.reactnativenavigation.views.topbar;
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Typeface;
+import android.graphics.Color;
 import android.os.Build;
 import android.support.annotation.ColorInt;
 import android.support.annotation.NonNull;
@@ -60,6 +61,7 @@ public class TopBar extends AppBarLayout implements ScrollEventListener.ScrollAw
         topTabs = new TopTabs(getContext());
         animator = new TopBarAnimator(this, parentView.getStackId());
         createLayout();
+	this.setBackgroundColor(Color.BLACK);
     }
 
     private void createLayout() {
new file mode 100644
--- /dev/null
+++ b/node_modules/react-native-navigation/lib/android/app/src/reactNative57/java/com/reactnativenavigation/react/DevBundleDownloadListenerAdapter.java
@@ -0,0 +1,28 @@
+package com.reactnativenavigation.react;
+
+import com.facebook.react.bridge.NativeDeltaClient;
+import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
+
+import javax.annotation.Nullable;
+
+public class DevBundleDownloadListenerAdapter implements DevBundleDownloadListener, NavigationDevBundleDownloadListener {
+    @Override
+    public void onSuccess(@Nullable NativeDeltaClient nativeDeltaClient) {
+        onSuccess();
+    }
+
+    @Override
+    public void onSuccess() {
+
+    }
+
+    @Override
+    public void onProgress(@Nullable String status, @Nullable Integer done, @Nullable Integer total) {
+
+    }
+
+    @Override
+    public void onFailure(Exception cause) {
+
+    }
+}
new file mode 100644
--- /dev/null
+++ b/node_modules/react-native-navigation/lib/android/app/src/reactNative57/java/com/reactnativenavigation/react/JsDevReloadHandlerFacade.java
@@ -0,0 +1,28 @@
+package com.reactnativenavigation.react;
+
+import com.facebook.react.bridge.NativeDeltaClient;
+import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
+
+import javax.annotation.Nullable;
+
+public class JsDevReloadHandlerFacade implements DevBundleDownloadListener, NavigationDevBundleDownloadListener {
+    @Override
+    public void onSuccess(@Nullable NativeDeltaClient nativeDeltaClient) {
+        onSuccess();
+    }
+
+    @Override
+    public void onProgress(@Nullable String status, @Nullable Integer done, @Nullable Integer total) {
+
+    }
+
+    @Override
+    public void onFailure(Exception cause) {
+
+    }
+
+    @Override
+    public void onSuccess() {
+
+    }
+}
similarity index 98%
rename from node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationReactNativeHost.java
rename to node_modules/react-native-navigation/lib/android/app/src/reactNative57/java/com/reactnativenavigation/react/NavigationReactNativeHost.java
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationReactNativeHost.java
+++ b/node_modules/react-native-navigation/lib/android/app/src/reactNative57/java/com/reactnativenavigation/react/NavigationReactNativeHost.java
@@ -83,7 +83,6 @@ public class NavigationReactNativeHost extends ReactNativeHost implements Bundle
                 .setUseDeveloperSupport(getUseDeveloperSupport())
                 .setRedBoxHandler(getRedBoxHandler())
                 .setJavaScriptExecutorFactory(getJavaScriptExecutorFactory())
-                .setUIImplementationProvider(getUIImplementationProvider())
                 .setInitialLifecycleState(LifecycleState.BEFORE_CREATE)
                 .setDevBundleDownloadListener(getDevBundleDownloadListener());
 
new file mode 100644
--- /dev/null
+++ b/node_modules/react-native-navigation/lib/android/app/src/reactNative57/java/com/reactnativenavigation/react/ReloadHandlerFacade.java
@@ -0,0 +1,25 @@
+package com.reactnativenavigation.react;
+
+import com.facebook.react.bridge.NativeDeltaClient;
+import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
+
+import javax.annotation.Nullable;
+
+public abstract class ReloadHandlerFacade implements DevBundleDownloadListener {
+    @Override
+    public void onSuccess(@Nullable NativeDeltaClient nativeDeltaClient) {
+
+    }
+
+    @Override
+    public void onProgress(@Nullable String status, @Nullable Integer done, @Nullable Integer total) {
+
+    }
+
+    @Override
+    public void onFailure(Exception cause) {
+
+    }
+
+    protected abstract void onSuccess();
+}
new file mode 100644
--- /dev/null
+++ b/node_modules/react-native-navigation/lib/android/app/src/reactNative57/java/com/reactnativenavigation/react/SyncUiImplementation.java
@@ -0,0 +1,70 @@
+package com.reactnativenavigation.react;
+
+import android.support.annotation.Nullable;
+
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.uimanager.ThemedReactContext;
+import com.facebook.react.uimanager.UIImplementation;
+import com.facebook.react.uimanager.UIManagerModule;
+import com.facebook.react.uimanager.ViewManager;
+import com.facebook.react.uimanager.common.MeasureSpecProvider;
+import com.facebook.react.uimanager.common.SizeMonitoringFrameLayout;
+import com.facebook.react.uimanager.events.EventDispatcher;
+
+import java.util.List;
+
+@SuppressWarnings("WeakerAccess")
+public class SyncUiImplementation extends UIImplementation {
+    private static final Object lock = new Object();
+
+    public SyncUiImplementation(ReactApplicationContext reactContext, List<ViewManager> viewManagerList, EventDispatcher eventDispatcher, int minTimeLeftInFrameForNonBatchedOperationMs) {
+        super(reactContext, viewManagerList, eventDispatcher, minTimeLeftInFrameForNonBatchedOperationMs);
+    }
+
+    public SyncUiImplementation(ReactApplicationContext reactContext, UIManagerModule.ViewManagerResolver viewManagerResolver, EventDispatcher eventDispatcher, int minTimeLeftInFrameForNonBatchedOperationMs) {
+        super(reactContext, viewManagerResolver, eventDispatcher, minTimeLeftInFrameForNonBatchedOperationMs);
+    }
+
+    @Override
+    public void manageChildren(
+            int viewTag,
+            @Nullable ReadableArray moveFrom,
+            @Nullable ReadableArray moveTo,
+            @Nullable ReadableArray addChildTags,
+            @Nullable ReadableArray addAtIndices,
+            @Nullable ReadableArray removeFrom) {
+        synchronized (lock) {
+            super.manageChildren(viewTag, moveFrom, moveTo, addChildTags, addAtIndices, removeFrom);
+        }
+    }
+
+    @Override
+    public void setChildren(int viewTag, ReadableArray childrenTags) {
+        synchronized (lock) {
+            super.setChildren(viewTag, childrenTags);
+        }
+    }
+
+    @Override
+    public void createView(int tag, String className, int rootViewTag, ReadableMap props) {
+        synchronized (lock) {
+            super.createView(tag, className, rootViewTag, props);
+        }
+    }
+
+    @Override
+    public void removeRootShadowNode(int rootViewTag) {
+        synchronized (lock) {
+            super.removeRootShadowNode(rootViewTag);
+        }
+    }
+
+    @Override
+    public <T extends SizeMonitoringFrameLayout & MeasureSpecProvider> void registerRootView(T rootView, int tag, ThemedReactContext context) {
+        synchronized (lock) {
+            super.registerRootView(rootView, tag, context);
+        }
+    }
+}
